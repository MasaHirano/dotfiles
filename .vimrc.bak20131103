"vim設定

" encoding -----------------------------------------
set termencoding=utf-8
set encoding=utf-8         " システムエンコードの値を入れる
" set fileencodings=iso-2022-jp,sjis,euc-jp
set fileencodings=utf-8,cp932,euc-jp,iso-2022-jp " encodingに指定しなかった文字コードを入れる

" file----------------------
set autoread                         " 更新時自動再読み込み
set hidden                           " 編集中でも他のファイルを開けるようにする
autocmd BufWritePre * :%s/\s\+$//ge  " 保存時に行末の空白を除去する
syntax on                            " シンタックスカラーリング
colorscheme molokai                  " カラー
"colorscheme zenburn " カラー

" バックアップ/スワップファイルを作らない------
set nowritebackup
set nobackup
set noswapfile

" キー操作---------------------------
set backspace=indent,eol,start  " バックスペースで特殊記号も削除可能に
set whichwrap=b,s,h,l,<,>,[,]   "カーソルを行頭、行末で止まらないようにする
set expandtab       " タブをスペースに置き換える
set tabstop=2       " タブ文字を画面上で何文字分に展開するか
set shiftwidth=2    " autoindent時に挿入されるインデントの幅
set shiftround      " インデントをshiftwidthの値の倍数に丸める
set softtabstop=0   " タブキー押し下げ時の空白の数。0ならtabstopと同じ
set autoindent      " 自動Tab
"set matchpairs+=<:> " 対応する括弧に%でジャンプする
source $VIMRUNTIME/macros/matchit.vim "複数文字の対応カッコに%でジャンプ


" neocomplcacheが動かないためコメントアウト
"set paste           " ペースト時にインデントとかよしなにやってくれる

" Complement Command -------------------
set wildmenu        " コマンド補完を強化
set wildmode=list:full      " リスト表示，最長マッチ

" Search -------------------------------
set wrapscan        " 最後まで検索したら先頭へ戻る
set ignorecase      " 大文字小文字無視
set smartcase       " 大文字ではじめたら大文字小文字無視しない
set incsearch       " インクリメンタルサーチ
set hlsearch        " 検索文字をハイライト

" View ---------------------------------
set showmatch     " 括弧の対応をハイライト
set showcmd       " 入力中のコマンドを表示
set showmode      " 現在のモードを表示
set number        " 行番号表示
" set nowrap        " 画面幅で折り返さない
set list              " 不可視文字表示
set listchars=tab:>\  " 不可視文字の表示方法
set notitle           " タイトル書き換えない
set scrolloff=5       " 行送り
set display=uhex      " 印字不可能文字を16進数で表示


"vimdiff color
hi DiffAdd    ctermfg=black ctermbg=2
hi DiffChange ctermfg=black ctermbg=3
hi DiffDelete ctermfg=black ctermbg=6
hi DiffText   ctermfg=black ctermbg=7

"ステータスライン設定
set laststatus=2
set statusline=%n\:%y
set statusline+=[%{(&fenc!=''?&fenc:&enc)}]
set statusline+=[%{Getff()}]
set statusline+=%m%r%=
"set statusline+=%F%=[%l/%L]
set statusline+=%{expand('%:p:t')}[%l/%L]

function! Getff()
  if &ff == 'unix'
    return 'LF'
  elseif &ff == 'dos'
    return 'CR+LF'
  elseif &ff == 'mac'
    return 'CR'
  else
    return '?'
  endif
endfunction

"" ステータスライン色設定
""  アクティブなステータスライン
"hi StatusLine gui=NONE guifg=Black guibg=Green cterm=NONE ctermfg=Black ctermbg=Blue
""  非アクティブなステータスライン
"hi StatusLineNC gui=NONE guifg=Black guibg=Green cterm=NONE ctermfg=Black ctermbg=Blue
""  プロンプトメッセージ
"hi Question gui=NONE guifg=Black guibg=Yellow cterm=NONE ctermfg=Black ctermbg=Yellow
""  --挿入--とかのメッセージ
"hi ModeMsg gui=NONE guifg=Green cterm=NONE ctermfg=Green
""  --継続--メッセージ
"hi MoreMsg gui=NONE guifg=Magenta cterm=NONE ctermfg=Magenta
""  警告メッセージ
"hi WarningMsg gui=NONE guifg=Yellow cterm=NONE ctermfg=Yellow
""  エラーメッセージ
"hi ErrorMsg gui=NONE guifg=White guibg=Magenta cterm=NONE ctermfg=White ctermbg=Magenta

"--** PHP **--
"phpファイル保存と同時に文法チェック
augroup phpsyntaxcheck
autocmd!
autocmd BufWrite *.php w !php -l
augroup END
"-------------

" vim tags
set tags=~/dotfiles/.vim/tags

"-----Plugin NeoBundle-----
set nocompatible
filetype off

if has('vim_starting')
  set rtp+=~/dotfiles/.vim/neobundle.vim.git/          " 管理ディレクトリの指定
endif

call neobundle#rc(expand('~/dotfiles/.vim/.bundle')) " プラグインインストールフォルダの指定

"--Sample--
" original repos on github
"Bundle 'user_name/repository_name'
" vim-scripts repos
"Bundle 'script_name'
" non github repos
"Bundle 'git://git.wincent.com/command-t.git'
"---------

"--Plugin--
"" neobundle.vim - Plugin管理
"NeoBundle 'Shougo/neobundle.vim'
" vimproc.vim - なんだこれ
NeoBundle 'git://github.com/Shougo/vimproc.git'
" unite.vim - ファイラなど
NeoBundle 'git://github.com/Shougo/unite.vim.git'
" neocomplcache - 補完機能
NeoBundle 'git://github.com/Shougo/neocomplcache.git'
" neocomplecache-snippets-complete - neocon使うために
NeoBundle 'Shougo/neocomplcache-snippets-complete'
" vim-ref - リファレンス
NeoBundle 'git://github.com/thinca/vim-ref.git'
" quickrun - ソースの実行
NeoBundle 'git://github.com/thinca/vim-quickrun.git'
" vim-symfony - Symfony便利コマンド
NeoBundle 'soh335/vim-symfony.git'
" zencoding - HTML高速記述
NeoBundle 'ZenCoding.vim'
" yanktmp.vim - 異なるvimプロセスにコピペできる
"NeoBundle 'git://github.com/vim-scripts/yanktmp.vim.git'
"surround.vim - 囲い文字などの入力
NeoBundle 'git://github.com/vim-scripts/surround.vim.git'
"YankRing.vim - コピー履歴を辿る
NeoBundle 'git://github.com/vim-scripts/YankRing.vim.git'
"phpfolding.vim - メソッドを折り畳む
NeoBundle 'git://github.com/vim-scripts/phpfolding.vim.git'
"vim-powerline.vim - かっこいいステータスライン
NeoBundle 'git://github.com/Lokaltog/vim-powerline.git'
"xml.vim - HTMLタグでも対応するタグにジャンプできる
NeoBundle 'git://github.com/sukima/xmledit.git'
"Align.vim - 整形処理(いろいろできる)
NeoBundle 'git://github.com/vim-scripts/Align.git'
"tabular.vim - 整形処理(手軽？)
NeoBundle 'git://github.com/godlygeek/tabular.git'
"easymotion.vim - キー移動補助
NeoBundle 'git://github.com/Lokaltog/vim-easymotion.git'
"vim-indent-guides - インデントをハイライト表示
NeoBundle 'git://github.com/nathanaelkane/vim-indent-guides.git'
"----------

filetype plugin indent on

" Installation check.
if neobundle#exists_not_installed_bundles()
  echomsg 'Not installed bundles : ' .
    \ string(neobundle#get_not_installed_bundle_names())
  echomsg 'Please execute ":NeoBundleInstall" command.'
  "finish
endif
"------end NeoBundle----------

"-----------------------
" Plugin Config
"-----------------------
"-- yanktmp.vim --
"map sy :call YanktmpYank()<CR>
"map sp :call YanktmpPaste_p()<CR>
"map sP :call YanktmpPaste_P()<CR>
"-- neocomplcache --
let g:neocomplcache_enable_at_startup = 1 " 起動時に有効化
"-- unite.vim --
" 入力モードで開始する
" let g:unite_enable_start_insert=1
"" バッファ一覧
nnoremap <silent> <C-u><C-b> :<C-u>Unite buffer<CR>
"" ファイル一覧
nnoremap <silent> <C-u><C-f> :<C-u>UniteWithBufferDir -buffer-name=files file<CR>
"" レジスタ一覧
nnoremap <silent> <C-u><C-r> :<C-u>Unite -buffer-name=register register<CR>
"" 最近使用したファイル一覧
nnoremap <silent> <C-u><C-j> :<C-u>Unite file_mru<CR>
"" 常用セット
nnoremap <silent> <C-u><C-u> :<C-u>Unite buffer file_mru<CR>
"" 全部乗せ
nnoremap <silent> <C-u><C-a> :<C-u>UniteWithBufferDir -buffer-name=files buffer file_mru bookmark file<CR>
"-- YankRing.vim --
nmap <silent> <SPACE><C-l> :<C-u>YRShow<CR>
"-- phpfolding.vim --
"" 有効化
set foldmethod=syntax
let php_folding = 1
"" ファイルオープン時の折りたたみ状況の設定 foldlevel=0は全て閉じた状態
set foldlevel=1000
"" PHP以外も折り畳む
augroup vimrc
  autocmd FileType phpunit EnableFastPHPFolds
augroup END
"-- vim-powerline.vim --
"" 設定ファイルは別ファイルとして記載
source ~/dotfiles/.vim/.vimrc.plugin.vim_powerline
"-- Align.vim --
"" 日本語などの幅広文字に対応するための設定
let g:Align_xstrlen=3
"-- easymotion.vim --
"" ホームポジションに近いキーを使う
let g:EasyMotion_keys='hjklasdfgyuiopqwertnmzxcvbHJKLASDFGYUIOPQWERTNMZXCVB'
"" 「'」 + 何かにマッピング
let g:EasyMotion_leader_key="<space>"
"" 1 ストローク選択を優先する
let g:EasyMotion_grouping=1
"" カラー設定変更
hi EasyMotionTarget ctermbg=none ctermfg=green
hi EasyMotionShade  ctermbg=none ctermfg=blue
"-- vim-indent-guides --
"" vim立ち上げたときに、自動的にオンにする
let g:indent_guides_enable_on_vim_startup=1
"" ガイドをスタートするインデントの量
let g:indent_guides_start_level=2
"" ガイドの幅
let g:indent_guides_guide_size = 1
"" 自動カラーを無効にする(下記 色設定が適用されないため)
let g:indent_guides_auto_colors=0
"" 奇数インデントのカラー(ctermbgの値を調整)
"   - カラーコード表(http://cl.pocari.org/images/vim-256color.png)
autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  guibg=#262626 ctermbg=235
"" 偶数インデントのカラー
autocmd VimEnter,Colorscheme * :hi IndentGuidesEven guibg=#3c3c3c ctermbg=237

"-----end plugin config--


"-----------------------
" Key Mapping
"-----------------------
"移動系
imap <silent> <C-h> <Left>
imap <silent> <C-j> <Down>
imap <silent> <C-k> <Up>
imap <silent> <C-l> <Right>

"補完系(C-"などでフリーズ現象が起きたため)
"imap { {}<LEFT>
"imap [ []<LEFT>
"imap ( ()<LEFT>
"imap < <><LEFT>

"コマンド系
imap <silent> <C-i> <ESC>

"-----------------------
" 入力補完
"-----------------------
"php
autocmd FileType php  :set dictionary=~/dotfiles/.vim/.dictionary/php.dict

"閉じタグ補完
"augroup MyTagCloseHelper
"  autocmd!
"  autocmd Filetype xml  inoremap <buffer> </ </<C-x><C-o>
"  autocmd Filetype html inoremap <buffer> </ </<C-x><C-o>
"  autocmd Filetype php  inoremap <buffer> </ </<C-x><C-o>
"augroup END


