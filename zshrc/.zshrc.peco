#######################################
# peco settings
#######################################

###################
# ヒストリー検索
function peco-select-history() {
  local tac
  if which tac > /dev/null; then
    tac="tac";
  else
    tac="tail -r"
  fi
  BUFFER=$(history -n 1 | eval $tac | peco --query "$LBUFFER")
  CURSOR=$#BUFFER
  zle clear-screen
}
zle -N peco-select-history
bindkey '^r' peco-select-history


####################
## 最近移動したディレクトリへの移動
# Change Directory History
alias cdh="pushd +\$(dirs -p -v -l | sort -k 2 -k 1n | uniq -f 1 | sort -n | peco | head -n 1 | awk '{print \$1}')"


####################
### gitコミットのハッシュ値を取得
#function peco-git-hash() {
#  GIT_COMMIT_HASH=$(git log --oneline --graph --all --decorate | peco | sed -e "s/^\W\+\([0-9A-Fa-f]\+\).*$/\1/")
#  BUFFER=${BUFFER}${GIT_COMMIT_HASH}
#  CURSOR=$#BUFFER
#}
#zle -N peco-git-hash
#bindkey "^h" peco-git-hash
alias -g H='`git log --oneline --graph --all --decorate | peco | sed -e "s/^\W\+\([0-9A-Fa-f]\+\).*$/\1/"`'


####################
## gitブランチ名を取得
#function peco-git-branch() {
#  GIT_BRANCH=$(git branch | peco)
#  BUFFER=${BUFFER}${GIT_BRANCH}
#  CURSOR=$#BUFFER
#}
#zle -N peco-git-branch
#bindkey "^b" peco-git-branch
alias -g B='`git branch | peco`'


####################
## プロセスのkill
function peco-pkill() {
  for pid in `ps aux | peco | awk '{ print $2 }'`
  do
    kill $pid
    echo "Killed ${pid}"
  done
}
alias pk="peco-pkill"


