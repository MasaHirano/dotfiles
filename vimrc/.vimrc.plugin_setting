"-----------------------
" Plugin Config
"-----------------------

"--------------------------
" Shougo/neocomplete
"   https://github.com/Shougo/neocomplete.vim
"--------------------------
" Use neocomplete.
let g:neocomplete#enable_at_startup = 1
" Use smartcase.
let g:neocomplete#enable_smart_case = 1


"--------------------------
" Shougo/neosnippet-snippets
"   https://github.com/Shougo/neosnippet.vim
"--------------------------
" Plugin key-mappings.
imap <C-k>     <Plug>(neosnippet_expand_or_jump)
smap <C-k>     <Plug>(neosnippet_expand_or_jump)
xmap <C-k>     <Plug>(neosnippet_expand_target)

" SuperTab like snippets behavior.
imap <expr><TAB> neosnippet#expandable_or_jumpable() ?
\ "\<Plug>(neosnippet_expand_or_jump)"
\: pumvisible() ? "\<C-n>" : "\<TAB>"
smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
\ "\<Plug>(neosnippet_expand_or_jump)"
\: "\<TAB>"

" For snippet_complete marker.
if has('conceal')
  set conceallevel=2 concealcursor=i
endif

" Enable snipMate compatibility feature.
let g:neosnippet#enable_snipmate_compatibility = 1
" Tell Neosnippet about the other snippets
let g:neosnippet#snippets_directory='~/dotfiles/snippets'


"--------------------------
" vim-scripts/Align
"   https://github.com/vim-scripts/Align
"--------------------------
" 日本語などの幅広文字に対応するための設定
let g:Align_xstrlen=3


"--------------------------
" nathanaelkane/vim-indent-guides
"   https://github.com/nathanaelkane/vim-indent-guides
"--------------------------
" vim立ち上げたときに、自動的にオンにする
let g:indent_guides_enable_on_vim_startup=1
" ガイドをスタートするインデントの量
let g:indent_guides_start_level=2
" ガイドの幅
let g:indent_guides_guide_size = 1
" 自動カラーを無効にする(下記 色設定が適用されないため)
let g:indent_guides_auto_colors=0
" 奇数インデントのカラー(ctermbgの値を調整)
"   - カラーコード表(http://cl.pocari.org/images/vim-256color.png)
autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  guibg=#262626 ctermbg=235
" 偶数インデントのカラー
autocmd VimEnter,Colorscheme * :hi IndentGuidesEven guibg=#3c3c3c ctermbg=237


"--------------------------
" airblade/vim-gitgutter
"   https://github.com/airblade/vim-gitgutter
"--------------------------
" Key mappings
nnoremap <silent> ,gt :<C-u>GitGutterToggle<CR>
nnoremap <silent> ,gr :<C-u>GitGutterDisable<CR>:<C-u>GitGutterEnable<CR>
nnoremap <silent> ,gn :<C-u>GitGutterNextHunk<CR>
nnoremap <silent> ,gp :<C-u>GitGutterPrevHunk<CR>


"--------------------------
" glidenote/memolist.vim
"   https://github.com/glidenote/memolist.vim
"--------------------------
" Key mappings
nnoremap :mn  :MemoNew<CR>
nnoremap :ml  :MemoList<CR>
nnoremap :mg  :MemoGrep<CR>


"--------------------------
" scrooloose/nerdcommenter
"   https://github.com/scrooloose/nerdcommenter
"--------------------------
" デフォルトのキーマッピングをオフ
let g:NERDCreateDefaultMappings = 0
" コメントアウトした際のスペース数を1に設定
let NERDSpaceDelims = 1
" コメントアウト、解除
nmap ,, <Plug>NERDCommenterToggle
vmap ,, <Plug>NERDCommenterToggle
" 複数行コメント
nmap ,s <Plug>NERDCommenterSexy
vmap ,s <Plug>NERDCommenterSexy


"--------------------------
" alpaca-tc/alpaca_tags
"   https://github.com/alpaca-tc/alpaca_tags
"--------------------------
let g:alpaca_tags#config = {
                       \    '_' : '-R --sort=yes',
                       \    'ruby': '--languages=+Ruby',
                       \ }

" http://kaihar4.com/2014/08/12/vim-ctags.html
augroup AlpacaTags
  autocmd!
  if exists(':AlpacaTags')
    autocmd BufWritePost Gemfile AlpacaTagsBundle
    autocmd BufEnter * AlpacaTagsSet
    " 毎回保存と同時更新する場合はコメントを外す
    " autocmd BufWritePost * TagsUpdate
  endif
augroup END


"--------------------------
" vim-syntastic/syntastic
"   https://github.com/vim-syntastic/syntastic
"--------------------------
let g:syntastic_mode_map = { 'mode': 'active', 'active_filetypes': ['ruby', 'javascript'] }
let g:syntastic_ruby_checkers = ['rubocop']
let g:syntastic_javascript_checkers = ['jshint']
let g:syntastic_check_on_open = 0 "ファイルオープン時にはチェックをしない
let g:syntastic_check_on_save = 1 "ファイル保存時にはチェックを実施


"--------------------------
" othree/html5.vim
"   https://github.com/othree/html5.vim
"--------------------------
let g:html5_event_handler_attributes_complete = 1
let g:html5_rdfa_attributes_complete = 1
let g:html5_microdata_attributes_complete = 1
let g:html5_aria_attributes_complete = 1


"--------------------------
" A tree explorer plugin for vim.
"   https://github.com/scrooloose/nerdtree
"--------------------------
map <C-e> :NERDTreeToggle<CR>
let NERDTreeShowHidden=1
