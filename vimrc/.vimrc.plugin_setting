"-----------------------
" Plugin Config
"-----------------------

"--------------------------
" vim-scripts/Align
"   https://github.com/vim-scripts/Align
"--------------------------
" For Japanese language. Determine a string's length accurately.
let g:Align_xstrlen=3


"--------------------------
" nathanaelkane/vim-indent-guides
"   https://github.com/nathanaelkane/vim-indent-guides
"--------------------------
" indent guides enabled by default
let g:indent_guides_enable_on_vim_startup=1
" which indent level to start showing guides from
let g:indent_guides_start_level=2
" the size of the indent guide
let g:indent_guides_guide_size = 1
" not the plugin automatically calculates the highlight colors
let g:indent_guides_auto_colors=0
" Colorize odd indents(adjust ctermbg's value)
"   - Color codes(http://cl.pocari.org/images/vim-256color.png)
autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  guibg=#262626 ctermbg=235
" Colorize even indents
autocmd VimEnter,Colorscheme * :hi IndentGuidesEven guibg=#3c3c3c ctermbg=237


"--------------------------
" airblade/vim-gitgutter
"   https://github.com/airblade/vim-gitgutter
"--------------------------
" Key mappings
nnoremap <silent> ,gt :<C-u>GitGutterToggle<CR>
nnoremap <silent> ,gr :<C-u>GitGutterDisable<CR>:<C-u>GitGutterEnable<CR>
nnoremap <silent> ,gn :<C-u>GitGutterNextHunk<CR>
nnoremap <silent> ,gp :<C-u>GitGutterPrevHunk<CR>


"--------------------------
" glidenote/memolist.vim
"   https://github.com/glidenote/memolist.vim
"--------------------------
" Key mappings
nnoremap :mn  :MemoNew<CR>
nnoremap :ml  :MemoList<CR>
nnoremap :mg  :MemoGrep<CR>


"--------------------------
" scrooloose/nerdcommenter
"   https://github.com/scrooloose/nerdcommenter
"--------------------------
" Turn the default mappings off
let g:NERDCreateDefaultMappings = 0
" Add spaces after comment delimiters by default
let NERDSpaceDelims = 1
" Toggle comment out, uncommented
nmap ,, <Plug>NERDCommenterToggle
vmap ,, <Plug>NERDCommenterToggle
" Toggle comment out multiple lines
nmap ,s <Plug>NERDCommenterSexy
vmap ,s <Plug>NERDCommenterSexy


"--------------------------
" vim-syntastic/syntastic
"   https://github.com/vim-syntastic/syntastic
"--------------------------
let g:syntastic_mode_map = { 'mode': 'active', 'active_filetypes': ['ruby', 'javascript'] }
let g:syntastic_ruby_checkers = ['rubocop']
let g:syntastic_javascript_checkers = ['jshint']
" syntastic in active mode will run syntax checks when buffers are first loaded, as well as on saving
let g:syntastic_check_on_open = 0
" skip checks when you issue `:wq`, `:x`, and `:ZZ`
let g:syntastic_check_on_save = 1


"--------------------------
" othree/html5.vim
"   https://github.com/othree/html5.vim
"--------------------------
let g:html5_event_handler_attributes_complete = 1
let g:html5_rdfa_attributes_complete = 1
let g:html5_microdata_attributes_complete = 1
let g:html5_aria_attributes_complete = 1


"--------------------------
" scrooloose/nerdtree
"   https://github.com/scrooloose/nerdtree
"--------------------------
map <C-e> :NERDTreeToggle<CR>
let NERDTreeShowHidden=1


"--------------------------
" vim-airline/vim-airline
"   https://github.com/vim-airline/vim-airline
"--------------------------
let g:airline#extensions#tabline#enabled = 1


"--------------------------
" Shougo/deoplete.nvim
"   https://github.com/Shougo/deoplete.nvim
"--------------------------
let g:deoplete#enable_at_startup = 1

